GET 1
GET 2
JZERO 1 EXIT_ZERO
JZERO 2 EXIT_ZERO
DEC 2
JZERO 2 EXIT_ONE # DZIELENIE PRZEZ 1
INC 2
ZERO 0 # NORMALNIE ZBYTECZNA
INC 0 # ZACHOWANIE DZIELNEJ I DZIELNIKA, r0 = 1
STORE 1
INC 0 # r0 = 2
STORE 2
ZERO 3
ZERO 4
ALIGN_DIVISOR: DEC 0 # r0 = 1
SUB 2
JZERO 2 SHIFT_DIVISOR
JUMP AFTER_SHIFT_DIVISOR
SHIFT_DIVISOR: INC 0 # r0 = 2
LOAD 2
SHL 2
INC 3 # SHIFTS COUNTER
STORE 2
JUMP ALIGN_DIVISOR
AFTER_SHIFT_DIVISOR: INC 0 # r0 = 2
LOAD 2
SHR 2 # PRZESUNIĘCIE Z POWROTEM O JEDNĄ POZYCJĘ BY NIE BYŁO WIĘKSZE
STORE 2
# DEC 3
ALIGN_DIVISOR_END: INC 1 # sprawdzanie czy większe
SUB 1
JZERO 1 SUB_RESULT_ZERO
DEC 1
DEC 0
STORE 1
SHL 4
INC 4
SHR 2
INC 0
STORE 2
DEC 3
JZERO 3 EXIT
JUMP ALIGN_DIVISOR_END
SUB_RESULT_ZERO: DEC 0
LOAD 1 // ponowne wczytanie
SHR 2
INC 0
STORE 2
DEC 3
SHL 4
JZERO 3 EXIT
JUMP ALIGN_DIVISOR_END
EXIT_ZERO: ZERO 1
ZERO 4
JUMP EXIT
EXIT_ONE: ZERO 4
EXIT: PUT 1
PUT 4
PUT 3
HALT
